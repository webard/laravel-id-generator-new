name: tests

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  test_sqlite:
    runs-on: ubuntu-latest

    timeout-minutes: 5

    strategy:
      fail-fast: true
      matrix:
        php: [8.4, 8.3, 8.2]
        dependency-version: [prefer-stable]

    name: PHP:${{ matrix.php }} SQLite

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, mbstring, zip, mbstring, pdo, sqlite, pdo_sqlite
          coverage: pcov

      - name: Install dependencies
        run:  composer install --no-interaction --prefer-dist --no-scripts

      - name: Execute tests
        run: ./vendor/bin/phpunit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: ':memory:'


  test_mysql8:
    runs-on: ubuntu-latest

    timeout-minutes: 5

    strategy:
      fail-fast: true
      matrix:
        php: [8.4, 8.3, 8.2]
        dependency-version: [prefer-stable]

    name: PHP:${{ matrix.php }} MySQL 8

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: laravel
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, mbstring, zip, mbstring, pdo, sqlite, pdo_sqlite
          coverage: pcov

      - name: Install dependencies
        run:  composer install --no-interaction --prefer-dist --no-scripts

      - name: Execute tests
        run: ./vendor/bin/phpunit
        env:
          DB_CONNECTION: mysql
  
  test_pgsql14:
    runs-on: ubuntu-latest

    timeout-minutes: 5

    strategy:
      fail-fast: true
      matrix:
        php: [8.4, 8.3, 8.2]
        dependency-version: [prefer-stable]

    name: PHP:${{ matrix.php }} PostgreSQL 14

    services:
      postgresql:
        image: postgres:14
        env:
          POSTGRES_DB: laravel
          POSTGRES_USER: forge
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: --health-cmd=pg_isready --health-interval=10s --health-timeout=5s --health-retries=3


    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, mbstring, zip, mbstring, pdo, sqlite, pdo_sqlite
          coverage: pcov

      - name: Install dependencies
        run:  composer install --no-interaction --prefer-dist --no-scripts

      - name: Execute tests
        run: ./vendor/bin/phpunit
        env:
          DB_CONNECTION: pgsql
          DB_USERNAME: forge
          DB_PASSWORD: password


  test_pgsql10:
    runs-on: ubuntu-latest

    timeout-minutes: 5

    strategy:
      fail-fast: true
      matrix:
        php: [8.4, 8.3, 8.2]
        dependency-version: [prefer-stable]

    name: PHP:${{ matrix.php }} PostgreSQL 10

    services:
      postgresql:
        image: postgres:10
        env:
          POSTGRES_DB: laravel
          POSTGRES_USER: forge
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: --health-cmd=pg_isready --health-interval=10s --health-timeout=5s --health-retries=3


    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, mbstring, zip, mbstring, pdo, sqlite, pdo_sqlite
          coverage: pcov

      - name: Install dependencies
        run:  composer install --no-interaction --prefer-dist --no-scripts

      - name: Execute tests
        run: ./vendor/bin/phpunit
        env:
          DB_CONNECTION: pgsql

  mariadb:
    runs-on: ubuntu-latest

    timeout-minutes: 5

    strategy:
      fail-fast: true
      matrix:
        php: [8.4, 8.3, 8.2]
        dependency-version: [prefer-stable]

    name: PHP:${{ matrix.php }} MariaDB

    services:
      mariadb:
        image: mariadb:10
        env:
          MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: yes
          MARIADB_DATABASE: laravel
        ports:
          - 3306:3306
        options: --health-cmd="healthcheck.sh --connect --innodb_initialized" --health-interval=10s --health-timeout=5s --health-retries=3


    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, mbstring, zip, mbstring, pdo, sqlite, pdo_sqlite
          coverage: pcov

      - name: Install dependencies
        run:  composer install --no-interaction --prefer-dist --no-scripts

      - name: Execute tests
        run: ./vendor/bin/phpunit
        env:
          DB_CONNECTION: mariadb